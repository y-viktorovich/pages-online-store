/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/app.js":
/*!******************************!*\
  !*** ./src/assets/js/app.js ***!
  \******************************/
/***/ (function() {

eval("// Header fixed\r\n\r\nconst header = document.querySelector('#header');\r\n\r\nif (header) {\r\n    window.addEventListener('scroll', (event) => {\r\n        window.scrollY >= 1 ? header.classList.add('header--darken') : header.classList.remove('header--darken');\r\n    });\r\n}\r\n\r\n\r\n//  Burger menu\r\n\r\nconst burgerBtn = document.querySelector('#navToggle'),\r\n      nav = document.querySelector('#nav'),\r\n      body = document.querySelector('body');\r\n\r\n\r\nburgerBtn.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n\r\n    burgerBtn.classList.toggle('active');\r\n    nav.classList.toggle('show');\r\n    body.classList.toggle('show-nav');\r\n});\r\n\r\nwindow.addEventListener('resize',(e) => {\r\n    burgerBtn.classList.remove('active');\r\n    nav.classList.remove('show');\r\n    body.classList.remove('show-nav');\r\n});\r\n\r\n\r\n\r\n// Modal\r\n\r\nconst cartBtn = document.querySelector('[data-cart]'),\r\n      cartModal = document.querySelector('#cart-modal'),\r\n      modal = document.querySelector('.modal'),\r\n      modalContent = document.querySelector('.modal__inner');\r\n\r\n\r\nfunction modalClose() {\r\n    body.classList.remove('no-scroll');\r\n    modal.classList.remove('show');\r\n    \r\n    modalContent.style.transform = 'translateY(-50px)';\r\n    modalContent.style.opacity = '0';\r\n}\r\n\r\nfunction modalOpen() {\r\n    body.classList.add('no-scroll');\r\n    modal.classList.add('show');\r\n\r\n    setTimeout(() => {\r\n        modalContent.style.transform = 'translateY(0)';\r\n        modalContent.style.opacity = '1';\r\n    }, 1);\r\n}\r\n\r\n\r\ncartBtn.addEventListener('click', event => {\r\n    event.preventDefault();\r\n    modalOpen();\r\n});\r\n\r\n\r\nmodal.addEventListener('click', event => {\r\n    event.preventDefault();\r\n    if(event.target === modal || event.target.getAttribute('data-close') == '') {\r\n        modalClose();\r\n    }\r\n});\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n    if (event.code === \"Escape\" && modal.classList.contains('show')) {\r\n        modalClose();\r\n    }\r\n});\r\n\r\n\r\n\r\n// Form validation \r\n\r\nlet form = document.querySelector('#form'),\r\n    userName = document.querySelector('#username'),\r\n    email = document.querySelector('#email'),\r\n    phone = document.querySelector('#phone'),\r\n    massage = document.querySelector('#textarea'),\r\n    checkbox = document.querySelector('#checkbox'),\r\n    password = document.querySelector('#password');\r\n\r\n\r\nconst setError = (element, massage) => {\r\n    const inputControl = element?.parentElement;\r\n    const errorDisplay = inputControl?.querySelector('.form__error');\r\n\r\n    if(element) {\r\n        errorDisplay.innerText = massage;\r\n        inputControl.classList.add('error'),\r\n        inputControl.classList.remove('success');\r\n    }\r\n};\r\n\r\nconst setSuccess = element => {\r\n    const inputControl = element?.parentElement;\r\n    const errorDisplay = inputControl?.querySelector('.form__error');\r\n\r\n    if (element) {\r\n        errorDisplay.innerText = '';\r\n        inputControl.classList.add('success');\r\n        inputControl.classList.remove('error');\r\n    }\r\n};\r\n\r\nconst isValidUserName = username => {\r\n    const re = /^([а-яё\\s]+|[a-z\\s]+)$/iu;\r\n    return re.test(String(username));\r\n};\r\n\r\n\r\nconst isValidEmail = email => {\r\n    const re = /^((([0-9A-Za-z]{1}[-0-9A-z\\.]{1,}[0-9A-Za-z]{1})|([0-9А-Яа-я]{1}[-0-9А-я\\.]{1,}[0-9А-Яа-я]{1}))@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/u;\r\n    return re.test(String(email));\r\n};\r\n\r\n\r\nconst isValidPhone = phone => {\r\n    const re = /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/;\r\n    return re.test(String(phone));\r\n};\r\n\r\n\r\nconst validateInputs = () => {\r\n    const usernameValue = userName?.value.trim(),\r\n          emailValue = email?.value.trim(),\r\n          phoneValue = phone?.value.trim(),\r\n          massageValue = massage?.value.trim(),\r\n          passwordValue = password?.value.trim();\r\n\r\n    if (usernameValue === '') {\r\n        setError(userName, 'Please enter a name');\r\n    } else if (!isValidUserName(usernameValue)) {\r\n        setError(userName, 'The name cannot consist of numbers and contain letters from different languages');\r\n    } else if (usernameValue?.length < 2) {\r\n        setError(userName, 'Name must have at least two characters');\r\n    } else {\r\n        setSuccess(userName);\r\n    }\r\n\r\n    if (emailValue === '') {\r\n        setError(email, 'Please enter your email address');\r\n    } else if (!isValidEmail(emailValue)) {\r\n        setError(email, 'Please enter your email address in the correct format');\r\n    } else {\r\n        setSuccess(email);\r\n    }\r\n\r\n    if (phoneValue === '') {\r\n        setError(phone, 'Please enter your phone number');\r\n    } else if (!isValidPhone(phoneValue)){\r\n        setError(phone, 'Please enter your phone number in the correct format');\r\n    } else {\r\n        setSuccess(phone);\r\n    }\r\n\r\n\r\n    if (massageValue === '') {\r\n        setError(massage, 'The message field must not be empty. Please tell me what interests you.');\r\n    } else if (massageValue?.length < 20 ) {\r\n        setError(massage, 'The message field must contain at least twenty characters.');\r\n    } else {\r\n        setSuccess(massage);\r\n    }\r\n\r\n    if (passwordValue === '') {\r\n        setError(password, 'The message field must not be empty. Please enter your password.');\r\n    } else if (passwordValue?.length < 7 ) {\r\n        setError(password, 'The message field must contain at least seven characters.');\r\n    } else {\r\n        setSuccess(password);\r\n    }\r\n\r\n\r\n    if (checkbox?.checked == false) {\r\n        checkbox.nextElementSibling.style.borderColor = 'red';\r\n    } else if (checkbox) {\r\n        checkbox.nextElementSibling.style.borderColor = 'green';\r\n    }\r\n};\r\n\r\n\r\nif (form) {\r\n    form.addEventListener('submit', event => {\r\n        event.preventDefault();\r\n\r\n        validateInputs();\r\n    });\r\n}\r\n\r\n\r\n\r\n// Accordion\r\n\r\nconst accordion = document.querySelectorAll('[data-accordion]');\r\n\r\naccordion.forEach(element => {\r\n    element.addEventListener('click', event => {\r\n\r\n        if (element.classList.contains('active')) {\r\n            element.lastElementChild.classList.add('fade-down');\r\n        }\r\n\r\n        element.classList.toggle('active');\r\n\r\n        element.lastElementChild.classList.toggle('fade-down');\r\n    });\r\n});\r\n\r\n\r\n\r\n// Counter\r\n\r\ntotalUsdPrice(calcCartPrice());\r\n\r\nwindow.addEventListener('click', (event) => {\r\n\r\n    const productCount =  event.target?.closest('.product__count'),\r\n          counter = productCount?.querySelector('[data-counter]');\r\n\r\n    if(event.target.dataset.action === 'plus') {\r\n\r\n        if (parseInt(counter.value) < 100) {\r\n            counter.value = ++counter.value;\r\n            totalUsdPrice(calcCartPrice());\r\n        }\r\n    }\r\n\r\n    if(event.target.dataset.action === 'minus') {\r\n        if (parseInt(counter.value) > 1) {\r\n            counter.value = --counter.value;\r\n            totalUsdPrice(calcCartPrice());\r\n        }\r\n    }\r\n\r\n    if (event.target.dataset.delete == '') {\r\n        event.target.closest('.cart__product').remove();\r\n        totalUsdPrice(calcCartPrice());\r\n        checkCartStatus();\r\n    }\r\n\r\n    if (event.target.dataset.counter == '') {\r\n        counter.addEventListener('input', (event) => {\r\n\r\n            if (parseInt(counter.value) > 100) {\r\n                counter.value = 100;\r\n            }\r\n\r\n            if (parseInt(counter.value) < 1 || counter.value == '') {\r\n                counter.value = 1;\r\n            }\r\n\r\n            totalUsdPrice(calcCartPrice());\r\n        });\r\n    }\r\n});\r\n\r\nfunction getPriceNumber(price) {\r\n    let string = '';\r\n        for (let index in price) {\r\n            if (isFinite(price[index]) || price[index] == '.')  {\r\n                string += price[index];\r\n            }\r\n        }\r\n    return parseFloat(string);\r\n}\r\n\r\nfunction calcCartPrice() {\r\n    const cartsItem = document.querySelectorAll('.cart__product');\r\n\r\n    let totalPrice = 0;\r\n\r\n    cartsItem.forEach(item => {\r\n        const amountEl = item.querySelector('[data-counter]'),\r\n              price = item.querySelector('[data-price]');\r\n\r\n            const currentPrice = getPriceNumber(amountEl.value) * getPriceNumber(price.innerText);\r\n            totalPrice += currentPrice;\r\n    });\r\n\r\n    return totalPrice.toFixed(2);\r\n}\r\n\r\nfunction totalUsdPrice(totalPrice) {\r\n    const totalCount = document.querySelector('[data-total]');\r\n    \r\n    totalCount.innerText = `$ ${totalPrice}  USD`;\r\n}\r\n\r\nfunction checkCartStatus() {\r\n    const cartContent = document.querySelector('.cart__content');\r\n\r\n    if (cartContent.children.length == 0) {\r\n        cartContent.innerText = 'Your cart is empty';\r\n    }\r\n}\r\n\r\n\r\n\r\n// Tabs\r\n\r\nconst tab = document?.querySelectorAll('[data-tab]'),\r\n      tabsContent = document?.querySelectorAll('.product__description-content'),\r\n      tabsParent = document?.querySelector('.product__description');\r\n\r\n\r\nfunction hideTabContent() {\r\n    tabsContent?.forEach((item, i) => {\r\n        item.classList.add('hide');\r\n        item.classList.remove('show', 'fade-down');\r\n    });\r\n}\r\n\r\nfunction showTabContent(i = 0) {\r\n    tabsContent[i]?.classList.add('show', 'fade-down');\r\n    tabsContent[i]?.classList.remove('hide');\r\n}\r\n\r\nhideTabContent();\r\nshowTabContent();\r\n\r\ntabsParent?.addEventListener('click', event => {\r\n    const target = event.target;\r\n    event.preventDefault();\r\n\r\n    if (target && target.classList.contains('btn')) {\r\n        tab.forEach((item, i) => {\r\n            if (target == item) {\r\n                hideTabContent();\r\n                showTabContent(i);\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/assets/js/app.js"]();
/******/ 	
/******/ })()
;